<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- *** Close Button *** -->
    <!--Random-->
    <sys:Double x:Key="PopupNotification.Button.Close.Size">20</sys:Double>
    <Duration x:Key="PopupNotification.Button.Close.Animation.Duration">0:0:0.25</Duration>

    <!--Background-->
    <Brush x:Key="PopupNotification.Button.Close.Background.Default.Brush">#00000000</Brush>
    <Color x:Key="PopupNotification.Button.Close.Background.Default.Color">#00000000</Color>
    <Color x:Key="PopupNotification.Button.Close.Background.Highlight.Color">#ffa6a6a6</Color>

    <!--Foreground-->
    <Brush x:Key="PopupNotification.Button.Close.Foreground.Default.Brush">#ff000000</Brush>
    <Color x:Key="PopupNotification.Button.Close.Foreground.Default.Color">#ff303030</Color>
    <Color x:Key="PopupNotification.Button.Close.Foreground.Highlight.Color">#ff000000</Color>

    <!--Border-->
    <Brush x:Key="PopupNotification.Button.Close.Border.Default.Brush">#00000000</Brush>
    <Color x:Key="PopupNotification.Button.Close.Border.Default.Color">#00000000</Color>
    <Color x:Key="PopupNotification.Button.Close.Border.Highlight.Color">#ff333333</Color>
    <Thickness x:Key="PopupNotification.Button.Close.Border.Thickness">2</Thickness>

    <!--*** Undo Button ***-->
    <!--Random-->

    <!--Background-->
    <Brush x:Key="PopupNotification.Button.Undo.Background.Default.Brush">#00ffffff</Brush>
    <Color x:Key="PopupNotification.Button.Undo.Background.Default.Color">#00ffffff</Color>
    <Color x:Key="PopupNotification.Button.Undo.Background.Highlight.Color">#cccccc</Color>

    <!--Foreground-->
    <Brush x:Key="PopupNotification.Button.Undo.Foreground.Default.Brush">#000000</Brush>
    <Color x:Key="PopupNotification.Button.Undo.Foreground.Default.Color">#000000</Color>
    <Color x:Key="PopupNotification.Button.Undo.Foreground.Highlight.Color">#000000</Color>
    <FontWeight x:Key="PopupNotification.Button.Undo.Foreground.Default.FontWeight">Bold</FontWeight>
    <sys:Double x:Key="PopupNotification.Button.Undo.Foreground.Default.Opacity">0.75</sys:Double>
    <sys:Double x:Key="PopupNotification.Button.Undo.Foreground.Highlight.Opacity">1</sys:Double>

    <!--Border-->
    <SolidColorBrush x:Key="PopupNotification.Button.Undo.Border.Default.Brush" Color="Transparent" />
    <Thickness x:Key="PopupNotification.Button.Undo.Border.Default.Thickness">0</Thickness>
    <Color x:Key="PopupNotification.Button.Undo.Border.Default.Color">#00ffffff</Color>
    <Color x:Key="PopupNotification.Button.Undo.Border.Highlight.Color">#242424</Color>
    <Thickness x:Key="PopupNotification.Button.Undo.Border.Padding">5</Thickness>

    <!--Animation-->
    <Duration x:Key="PopupNotification.Button.Undo.Animation.Duration">0:0:0.1</Duration>

    <!--*** Notification ***-->
    <!--Dimensions-->
    <sys:Double x:Key="PopupNotification.Width">250</sys:Double>
    <sys:Double x:Key="PopupNotification.Height">70</sys:Double>

    <!--Background-->
    <SolidColorBrush x:Key="PopupNotification.Background.Brush" Color="{StaticResource Theme.BackgroundDark}" />
    <SolidColorBrush x:Key="PopupNotification.Border.Brush" Color="{StaticResource Theme.Accent}" />

    <!--Animations-->
    <Storyboard x:Key="PopupNotification.Animation.Loaded">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:00.25" From="0" To="0.95" />
    </Storyboard>

    <!--Text-->
    <Brush x:Key="PopupNotification.Text.Foreground.Brush">#ffffff</Brush>
    <VerticalAlignment x:Key="PopupNotification.Text.Alignment.Vertical">Center</VerticalAlignment>
    <HorizontalAlignment x:Key="PopupNotification.Text.Alignment.Horizontal">Center</HorizontalAlignment>

    <!--*** Styles ***-->
    <Style x:Key="PopupNotification.Button.Close.Style" TargetType="{x:Type Button}" BasedOn="{StaticResource TriggerableButtonBase}">
        <Setter Property="Background" Value="{StaticResource PopupNotification.Button.Close.Background.Default.Brush}" />
        <Setter Property="Foreground" Value="{StaticResource PopupNotification.Button.Close.Foreground.Default.Brush}" />
        <Setter Property="Height" Value="{StaticResource PopupNotification.Button.Close.Size}" />
        <Setter Property="Width" Value="{StaticResource PopupNotification.Button.Close.Size}" />
        <Setter Property="BorderBrush" Value="{StaticResource PopupNotification.Button.Close.Border.Default.Brush}" />
        <Setter Property="BorderThickness" Value="{StaticResource PopupNotification.Button.Close.Border.Thickness}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Close.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Close.Background.Default.Color}"
                                                To="{StaticResource PopupNotification.Button.Close.Background.Highlight.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Close.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Close.Border.Default.Color}"
                                                To="{StaticResource PopupNotification.Button.Close.Border.Highlight.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Close.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Close.Foreground.Default.Color}"
                                                To="{StaticResource PopupNotification.Button.Close.Foreground.Highlight.Color}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Close.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Close.Background.Highlight.Color}"
                                                To="{StaticResource PopupNotification.Button.Close.Background.Default.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Close.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Close.Border.Highlight.Color}"
                                                To="{StaticResource PopupNotification.Button.Close.Border.Default.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Close.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Close.Foreground.Highlight.Color}"
                                                To="{StaticResource PopupNotification.Button.Close.Foreground.Default.Color}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupNotification.Button.Undo.Style" TargetType="{x:Type Button}" BasedOn="{StaticResource TriggerableButtonBase}">
        <Setter Property="Background" Value="{StaticResource PopupNotification.Button.Undo.Background.Default.Brush}" />
        <Setter Property="Foreground" Value="{StaticResource PopupNotification.Button.Undo.Foreground.Default.Brush}" />
        <Setter Property="FontWeight" Value="{StaticResource PopupNotification.Button.Undo.Foreground.Default.FontWeight}" />
        <Setter Property="BorderBrush" Value="{StaticResource PopupNotification.Button.Undo.Border.Default.Brush}" />
        <Setter Property="BorderThickness" Value="{StaticResource PopupNotification.Button.Undo.Border.Default.Thickness}" />
        <Setter Property="Padding" Value="{StaticResource PopupNotification.Button.Undo.Border.Padding}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Undo.Background.Default.Color}"
                                                To="{StaticResource PopupNotification.Button.Undo.Background.Highlight.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Undo.Border.Default.Color}"
                                                To="{StaticResource PopupNotification.Button.Undo.Border.Highlight.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                            Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                            From="{StaticResource PopupNotification.Button.Undo.Foreground.Default.Color}"
                                            To="{StaticResource PopupNotification.Button.Undo.Foreground.Highlight.Color}" />
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)"
                                            Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                            From="{StaticResource PopupNotification.Button.Undo.Foreground.Default.Opacity}"
                                            To="{StaticResource PopupNotification.Button.Undo.Foreground.Highlight.Opacity}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Undo.Background.Highlight.Color}"
                                                To="{StaticResource PopupNotification.Button.Undo.Background.Default.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Undo.Border.Highlight.Color}"
                                                To="{StaticResource PopupNotification.Button.Undo.Border.Default.Color}" />
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                                From="{StaticResource PopupNotification.Button.Undo.Foreground.Highlight.Color}"
                                                To="{StaticResource PopupNotification.Button.Undo.Foreground.Default.Color}" />
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)"
                                             Duration="{StaticResource PopupNotification.Button.Undo.Animation.Duration}"
                                             From="{StaticResource PopupNotification.Button.Undo.Foreground.Highlight.Opacity}"
                                             To="{StaticResource PopupNotification.Button.Undo.Foreground.Default.Opacity}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupNotification.Style" TargetType="{x:Type Border}" BasedOn="{x:Null}">
        <Setter Property="Width" Value="{StaticResource PopupNotification.Width}" />
        <Setter Property="MinWidth" Value="{StaticResource PopupNotification.Width}" />
        <Setter Property="MaxWidth" Value="{StaticResource PopupNotification.Width}" />
        <Setter Property="Height" Value="{StaticResource PopupNotification.Height}" />
        <Setter Property="MinHeight" Value="{StaticResource PopupNotification.Height}" />
        <Setter Property="MaxHeight" Value="{StaticResource PopupNotification.Height}" />
        <Setter Property="Background" Value="{StaticResource PopupNotification.Background.Brush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PopupNotification.Border.Brush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard Storyboard="{StaticResource PopupNotification.Animation.Loaded}" />
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupNotification.Text.Style" TargetType="{x:Type TextBlock}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="{StaticResource PopupNotification.Text.Foreground.Brush}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource PopupNotification.Text.Alignment.Vertical}" />
        <Setter Property="HorizontalAlignment" Value="{StaticResource PopupNotification.Text.Alignment.Horizontal}" />
    </Style>
</ResourceDictionary>
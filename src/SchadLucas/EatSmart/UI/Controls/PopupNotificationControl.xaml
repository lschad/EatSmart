<UserControl x:Class="SchadLucas.EatSmart.UI.Controls.PopupNotificationControl"
             x:Name="UiPopupNotificationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:types="clr-namespace:SchadLucas.EatSmart.Data.Types"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="TextBlockBaseStyle" TargetType="{x:Type TextBlock}" BasedOn="{x:Null}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="False" />
        </Style>
        <Style x:Key="TitleTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBaseStyle}">
            <Setter Property="Margin" Value="15, 0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style x:Key="CommandTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockBaseStyle}">
            <Setter Property="Foreground" Value="DarkGray" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Value="True">
                    <Setter Property="Foreground" Value="LightYellow" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="PopupActionsItemTemplate">
            <Border Style="{DynamicResource PopupActionsItemBorderStyle}" d:DataContext="{d:DesignInstance types:IPopupAction}">
                <TextBlock Text="{Binding Title, FallbackValue=error}" Style="{StaticResource CommandTextBlockStyle}" />
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding Action}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
        </ControlTemplate>

        <Style x:Key="PopupContainerStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#cc0c0c0c" />
            <Setter Property="BorderBrush" Value="#cc0c0c0c" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="Padding" Value="6" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Right" />

            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform x:Name="transform" X="500" Y="0" />
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.X">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-20">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseIn" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PopupActionsStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PopupActionsItemBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="Padding" Value="10,0" />
            <Setter Property="Focusable" Value="False" />
            <Style.Triggers>
                <Trigger Property="Border.IsMouseOver" Value="True">
                    <Setter Property="Border.Background" Value="DimGray" />
                    <Setter Property="Border.BorderBrush" Value="DimGray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PopupActionsItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Margin" Value="2, 0" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template" Value="{StaticResource PopupActionsItemTemplate}" />
        </Style>
    </UserControl.Resources>

    <Border Style="{StaticResource PopupContainerStyle}"
            x:Name="PopupNotificationContainer"
            DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">

        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" HorizontalAlignment="Left">
                <TextBlock x:Name="PopupTitle" Text="{Binding Text}" Style="{StaticResource TitleTextBlockStyle}" />
            </Grid>
            <Grid Grid.Column="1" HorizontalAlignment="Right" x:Name="PopupActionsContainer">
                <Grid Margin="5, 0">
                    <ListBox ItemsSource="{Binding Actions}"
                             x:Name="PopupActions"
                             Style="{StaticResource PopupActionsStyle}"
                             ItemContainerStyle="{StaticResource PopupActionsItemStyle}"
                             HorizontalAlignment="Right" />
                </Grid>
            </Grid>
            <Grid Grid.Column="2" HorizontalAlignment="Right" x:Name="PopupClose">
                <ContentControl Template="{StaticResource PopupActionsItemTemplate}" DataContext="{Binding CloseContext}" Margin="15, 0" />
            </Grid>
        </Grid>
    </Border>
</UserControl>